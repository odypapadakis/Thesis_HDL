
#
# Mnemonic Maps
#
mmap new -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_DataMem_In[31:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_DataMem_Out[31:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_DataMem_Read}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_DataMem_Ready}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_DataMem_Write[3:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_InstMem_Address[29:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_InstMem_In[31:0]}]}
	} ]]
set id [waveform add -cdivider divider]
set id [waveform add -label adasdad -comment {}]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_InstMem_Read}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.Bus_InstMem_Ready}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.D_Bus_GRANT}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.D_Bus_RQ}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.I_Bus_GRANT}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.I_Bus_RQ}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.P_DataMem_Address[29:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.P_DataMem_In[31:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.P_DataMem_Out[31:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.P_DataMem_Read}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.P_DataMem_Ready}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.P_DataMem_Write[3:0]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {ArbitrationSubModule_Testbench.uut.P_InstMem_Address[29:0]}]}
	} ]]

waveform xview limits 0 1000000ps
